Aim: Documentmenting your data
DN: What are some of the drawbacks to using an SQL database?
    -  Maintaining the tables when a change made to one has to be reflected
    across all
    - Storing different data types e.g. lists
    - Database schema cannot be changed
    - Repeating data
    - Scalability

**NoSQL is the umbrella category for databases that are not SQL.**
    e.g.
	Graph
	Document
	File System

Document-Oriented Database

    Records in Document-Oriented Databases are stored as documents.

    Each document contains all the data that is associated with the given
    record, in key-value pairs (fields).

    You do not need to specify the type of data put into each field.

    Fields can contain many different kinds of data, including lists and
    dictionaries.

    Documents that are meant to be stored together are put into collections.

    Documents in the same collection do not need to have the same fields.

    Each document has its own primary key usually generated by mongo.

    Example Document:

        {
	    _id: ObjectId(7df78ad8902c),
	    title: 'MongoDB Overview',
	    description: 'MongoDB is no sql database',
	    tags: ['mongodb', 'database', 'NoSQL'],
	    likes: 100,
	    comments: [
 	    	{
		    user: 'user1',
	    	    message: 'My first comment',
	    	    dateCreated: new Date(2011,1,20,2,15),
	    	    like: 0
	        },
	        {
		    user: 'user2',
	    	    message: 'My second comment',
	    	    dateCreated: new Date(2011,1,21,1,12),
	    	    like: 5
	        }
	    ]
	}


**mongod (server process)
    - Don't want to run two database servers at the same time
    - Can have multiple databases
        - Databases can have multiple collections
	    - Each collection has documents**

